{"version":3,"sources":["index.js"],"names":["ANIMATE_LINES","SETUP_ZOOM_AND_BG","n_lines","parseInt","n_entries","mult","create_data","start_at","data","i","line","j","offset","d3","shuffle","last","length","push","select","selectAll","remove","means","reducer","accumulator","currentValue","totals","reduce","all_means","margin","top","right","bottom","left","width","style","height","xScale","scaleLinear","range","yScale","color","scaleOrdinal","schemeCategory10","domain","xAxis","axisBottom","scale","yAxis","axisLeft","curve","curveStep","x","d","y","svg","attr","append","zoomed","console","log","event","transform","call","zoom","scaleExtent","on","extent","flat","animate_to_mean","text","lines","enter","resize","animate","ticks","Math","max","has_run","is_showing_mean","data_to_use","transition","duration","ease","easeExp","easeBounce","delay","active","styleTween","tweenDash","easeLinear","Debouncer","lookup","identifier","timer_id","clearTimeout","ms","cb","cancel","new_timer_id","setTimeout","debounce","l","getTotalLength","interpolateString","t","tweenBack","window","set"],"mappings":";AA4UC,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1UD,IAAIA,GAAgB,EAGhBC,GAAoB,EACpBC,EAAUC,cAAA,IAAiC,IAC3CC,EAAYD,cAAA,IAAmC,IAE/CE,EAAOF,cAAA,IAA8B,IAWzC,SAASG,IAMF,IALDC,IAIAC,KACKC,EALM,EAKQA,EAAIP,EALZ,EAKgCO,IAAK,CAS7C,IANDC,IAAAA,GAAQ,GAMHC,EAAI,EAAGA,EAAIP,EAAY,EAAGO,IAAK,CAElCC,IAAAA,EAASC,GAAGC,UAAU,EAAG,IAAI,GAE7BC,EAAOL,EAAKA,EAAKM,OAAS,GAE9BN,EAAKO,KAAKF,EAAOH,GAEnBJ,EAAKS,KAAKP,GAGLF,OAAAA,EAhCTK,GAAGK,OAAO,OACPC,UAAU,KACVC,SAoCH,IAHA,IAAIZ,EAAOF,IACPe,KAEKV,EAAI,EAAGA,EAAIP,EAAWO,IAAK,CAC5BW,IAAAA,EAAU,SAACC,EAAaC,GAAiBD,OAAAA,EAAcC,EAAab,IACtEc,EAASjB,EAAKkB,OAAOJ,EAAS,GAClCD,EAAMJ,KAAKQ,EAASvB,GAItB,IADA,IAAIyB,KACKlB,EAAI,EAAGA,EAAIP,EAASO,IAC3BkB,EAAUV,KAAKI,GAOjB,IAAIO,GAAWC,IAAK,GAAIC,MAAO,EAAGC,OAAQ,GAAIC,KAAM,IAClDC,EACE9B,SAASU,GAAGK,OAAO,OAAOgB,MAAM,UAAYN,EAAOI,KAAOJ,EAAOE,MACnEK,EACEhC,SAASU,GAAGK,OAAO,OAAOgB,MAAM,WAAaN,EAAOC,IAAMD,EAAOG,OAOjEK,EAASvB,GAAGwB,cAAcC,OAAO,EAAGL,IACpCM,EAAS1B,GAAGwB,cAAcC,OAAOH,EAAQ,IACzCK,EAAQ3B,GACT4B,eACAH,MAAMzB,GAAG6B,kBACTC,QAAQ,EAAGnC,EAAKQ,SAGf4B,EAAQ/B,GAAGgC,aAAaC,MAAMV,GAC9BW,EAAQlC,GAAGmC,WAAWF,MAAMP,GAG5B7B,EAAOG,GACRH,OACAuC,MAAMpC,GAAGqC,WAGTC,EAAE,SAASC,EAAG3C,GACN2B,OAAAA,EAAO3B,KAGf4C,EAAE,SAASD,EAAG3C,GACN8B,OAAAA,EAAOa,KAKdE,EAAMzC,GACPK,OAAO,OACPqC,KAAK,QAAStB,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3CyB,KAAK,SAAUpB,EAASP,EAAOC,IAAMD,EAAOG,QAC5CyB,OAAO,KACPD,KAAK,YAAa,aAAe3B,EAAOI,KAAO,IAAMJ,EAAOC,IAAM,KAIrE,GAFAyB,EAAMA,EAAIE,OAAO,KAAKD,KAAK,KAAM,SAE7BtD,EAAmB,CAKZwD,IAAAA,EAAT,WACEC,QAAQC,IAAI,UACZ9C,GAAGK,OAAO,YAAYqC,KAAK,YAAa1C,GAAG+C,MAAMC,YANnDP,EACGE,OAAO,QACPD,KAAK,QAAStB,EAAQL,EAAOI,KAAOJ,EAAOE,OAC3CyB,KAAK,SAAUpB,EAASP,EAAOC,IAAMD,EAAOG,QAK/ClB,GAAGK,OAAO,YAAY4C,KACpBjD,GACGkD,OACAC,aAAa,GAAO,IACpBC,GAAG,OAAQR,IAMlBrB,EAAOO,QAAQ,EAAGnC,EAAK,GAAGQ,SAG1BuB,EAAOI,OACL9B,GAAGqD,OAAO1D,EAAK2D,OAAQ,SAASf,EAAG3C,GAC1B2C,OAAAA,KAQXvC,GAAGK,OAAO,QAAQ+C,GAAG,QAASG,GAC9BvD,GAAGK,OAAO,QAAQ+C,GAAG,aAAcG,GAEnCd,EACGE,OAAO,KACPD,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBpB,EAAS,KAC5C2B,KAAKlB,GACLY,OAAO,QACPD,KAAK,QAAS,SACdA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,KAAM,SAEXrB,MAAM,cAAe,aACrBmC,KAAK,QAERf,EACGE,OAAO,KACPD,KAAK,QAAS,UACdO,KAAKf,GACLS,OAAO,QACPD,KAAK,QAAS,SACdA,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,SAEXrB,MAAM,cAAe,aACrBmC,KAAK,KAGR,IAAIC,EAAQhB,EACTnC,UAAU,YACVX,KAAKA,GACL+D,QACAf,OAAO,KACPD,KAAK,QAAS,WAsBjB,SAASiB,IACHvC,IAAAA,EACA9B,SAASU,GAAGK,OAAO,OAAOgB,MAAM,UAAYN,EAAOI,KAAOJ,EAAOE,MACnEK,EACEhC,SAASU,GAAGK,OAAO,OAAOgB,MAAM,WAAaN,EAAOC,IAAMD,EAAOG,OAGrEK,EAAOE,OAAO,EAAGL,IACjBM,EAAOD,OAAOH,EAAQ,IAGtBmB,EACGpC,OAAO,WACPqC,KAAK,YAAa,eAAiBpB,EAAS,KAC5C2B,KAAKlB,GAERU,EAAIpC,OAAO,WAAW4C,KAAKf,GAI3BO,EAAInC,UAAU,SAASoC,KAAK,IAAK,SAASH,GACjC1C,OAAAA,EAAK0C,KAIVpD,GACFyE,IAMF7B,EAAM8B,MAAMC,KAAKC,IAAI3C,EAAQ,GAAI,IACjCc,EAAM2B,MAAMC,KAAKC,IAAIzC,EAAS,GAAI,IArDpCmC,EACGd,OAAO,QACPD,KAAK,QAAS,QACdA,KAAK,IAAK,SAASH,GAEX1C,OAAAA,EAAK0C,KAEblB,MAAM,SAAU,SAASkB,EAAG3C,GACpB+B,OAAAA,EAAM/B,KAiDjB,IAAIoE,GAAU,EACVC,GAAkB,EAEtB,SAASV,IAEHW,IAAAA,EAAeD,EAA8BtE,EAAZmB,EACrCmD,GAAmBA,EAEPxB,EACTnC,UAAU,YACVX,KAAKuE,GACLC,aACAC,SAAS,KAGTC,KAAKJ,EAAkBjE,GAAGsE,QAAUtE,GAAGuE,YAQvClE,OAAO,QACPqC,KAAK,IAAK,SAASH,GAEX1C,OAAAA,EAAK0C,KAIlB,SAASqB,IACHI,IAGJnB,QAAQC,IAAI,cACZkB,GAAU,EACVvB,EACGnC,UAAU,SACVoC,KAAK,mBAAoB,YACzByB,aACAK,MAAM,SAACjC,EAAG3C,GAAMA,OAAI,IAAJA,IAChBwE,SAAS,KACThB,GAAG,QAAS,WACXpD,GAAGyE,OAAO,MACPC,WAAW,mBAAoBC,GAC/BN,KAAKrE,GAAG4E,YACRT,gBAIHU,IAAAA,EAyCL,WAxCe,SAAA,IAAA,EAAA,KAAA,GACPC,KAAAA,UAuCR,OAAA,EAAA,IAAA,IAAA,SArCQC,MAAAA,SAAAA,GACDC,IAAAA,EAAW,KAAKF,OAAOC,GACvBC,IACFC,aAAaD,UACN,KAAKF,OAAOE,OAiCxB,IAAA,MA9BKD,MAAAA,SAAAA,EAAYG,EAAIC,GACbC,KAAAA,OAAOL,GACRM,IAAAA,EAAeC,WAAWH,EAAID,GAC7BJ,KAAAA,OAAOC,GAAcM,MA2B7B,EAAA,GAvBGE,EAAW,IAAIV,EASnB,SAASF,IACHa,IAAAA,EAAI,KAAKC,iBACX7F,EAAII,GAAG0F,kBAAkB,KAAOF,EAAGA,EAAI,IAAMA,GACxC,OAAA,SAASG,GACP/F,OAAAA,EAAE+F,IAIb,SAASC,IACHJ,IAAAA,EAAI,KAAKC,iBACX7F,EAAII,GAAG0F,kBAAkBF,EAAI,KAAM,KAAOA,GACrC,OAAA,SAASG,GACP/F,OAAAA,EAAE+F,IAlBb3F,GAAGK,OAAOwF,QAAQzC,GAAG,SAAU,WAAMmC,OAAAA,EAASO,IAAI,UAAW,IAAKnC,KAIlEA","file":"randomwalks.43776eec.map","sourceRoot":"..","sourcesContent":["// https://bl.ocks.org/josiahdavis/7a02e811360ff00c4eef\n\nlet ANIMATE_LINES = false;\n// ANIMATE_LINES = true;\n\nlet SETUP_ZOOM_AND_BG = false;\nlet n_lines = parseInt(process.env.N_LINES) || 200;\nlet n_entries = parseInt(process.env.N_ENTRIES) || 150;\n// let mult = parseInt(process.env.MULT) || 0; // 1 gives us touching grid, 2 gives us spacing  stairs, 0 gives us a tree\nlet mult = parseInt(process.env.MULT) || 0.01; // 1 gives us touching grid, 2 gives us spacing  stairs, 0 gives us a tree\n// let n_lines = 3;\n\n// console.log(process.env.DB_HOST);\n// reset for hmr in dev\nd3.select(\"svg\")\n  .selectAll(\"*\")\n  .remove();\n\n// console.log(process.env.MULT)\n// generate my data\nfunction create_data() {\n  let start_at = 0;\n  // let start_at = -(n_lines / 2);\n  // console.log(start_at);\n  // let start_at = -5;\n  let data = [];\n  for (var i = start_at; i < n_lines + start_at; i++) {\n    // they all now just start at 0, much simple\n    // possibly add back in `mult` in the rendering or scale\n    let line = [0];\n    //better\n    // let line = [i * mult];\n    // let line = d3.range(-n_lines / 2 + i * mult, n_lines / 2 + i * mult);\n    // for simpler debugging\n    // let line = d3.range(-5 + i, 5 + i);\n    for (var j = 0; j < n_entries - 1; j++) {\n      // flip a coin\n      let offset = d3.shuffle([-1, 1])[0];\n      // get the the previous value\n      let last = line[line.length - 1];\n      // add the previous value to our new coin flip and push it to the line's array\n      line.push(last + offset);\n    }\n    data.push(line);\n  }\n\n  return data;\n}\n\nlet data = create_data();\nlet means = [];\n// console.log(data);\nfor (var j = 0; j < n_entries; j++) {\n  const reducer = (accumulator, currentValue) => accumulator + currentValue[j];\n  let totals = data.reduce(reducer, 0);\n  means.push(totals / n_lines);\n}\n\nlet all_means = [];\nfor (var i = 0; i < n_lines; i++) {\n  all_means.push(means);\n}\n// console.log(all_means);\n// console.log(means.length);\n\n// const csv_file_path = require(\"./giniLine.csv\");\n// Define margins\nvar margin = { top: 20, right: 0, bottom: 30, left: 50 },\n  width =\n    parseInt(d3.select(\"svg\").style(\"width\")) - margin.left - margin.right,\n  height =\n    parseInt(d3.select(\"svg\").style(\"height\")) - margin.top - margin.bottom;\n\n// Define date parser\n// var parseDate = d3.timeParse(\"%Y-%m-%d %H:%M:%S\");\n\n// Define scales\n// var xScale = d3.scaleTime().range([0, width]);\nvar xScale = d3.scaleLinear().range([0, width]);\nvar yScale = d3.scaleLinear().range([height, 0]);\nvar color = d3\n  .scaleOrdinal()\n  .range(d3.schemeCategory10)\n  .domain([0, data.length]);\n\n// Define axes\nvar xAxis = d3.axisBottom().scale(xScale);\nvar yAxis = d3.axisLeft().scale(yScale);\n\n// Define lines\nvar line = d3\n  .line()\n  .curve(d3.curveStep)\n  // .curve(d3.curveStepAfter)\n  // .curve(d3.curveMonotoneX)\n  .x(function(d, i) {\n    return xScale(i);\n    // return xScale(d[\"date\"]);\n  })\n  .y(function(d, i) {\n    return yScale(d);\n    // return yScale(d[\"concentration\"]);\n  });\n\n// Define svg canvas\nvar svg = d3\n  .select(\"svg\")\n  .attr(\"width\", width + margin.left + margin.right)\n  .attr(\"height\", height + margin.top + margin.bottom)\n  .append(\"g\")\n  .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\nsvg = svg.append(\"g\").attr(\"id\", \"graph\");\n\nif (SETUP_ZOOM_AND_BG) {\n  svg\n    .append(\"rect\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n  function zoomed() {\n    console.log(\"zoomm?\");\n    d3.select(\"g#graph \").attr(\"transform\", d3.event.transform);\n  }\n  d3.select(\"g#graph \").call(\n    d3\n      .zoom()\n      .scaleExtent([1 / 2, 4])\n      .on(\"zoom\", zoomed)\n  );\n}\n\n// Set the domain of the axes\n// hacky, assumes they're all the same length, we use the first one XXX\nxScale.domain([0, data[0].length]);\n\n// this fits them all\nyScale.domain(\n  d3.extent(data.flat(), function(d, i) {\n    return d;\n  })\n);\n\n//  for close up debug\n// xScale.domain([0, data[0].length / 2]);\n// yScale.domain([0, 25]);\n// d3.select(\"body\").on(\"click\", animate);\nd3.select(\"body\").on(\"click\", animate_to_mean);\nd3.select(\"body\").on(\"touchstart\", animate_to_mean);\n// Place the axes on the chart\nsvg\n  .append(\"g\")\n  .attr(\"class\", \"x axis\")\n  .attr(\"transform\", \"translate(0,\" + height + \")\")\n  .call(xAxis)\n  .append(\"text\")\n  .attr(\"class\", \"label\")\n  .attr(\"y\", 15)\n  .attr(\"x\", 55)\n  .attr(\"dy\", \".71em\")\n  // .attr(\"dx\", \".71em\")\n  .style(\"text-anchor\", \"beginning\")\n  .text(\"time\");\n\nsvg\n  .append(\"g\")\n  .attr(\"class\", \"y axis\")\n  .call(yAxis)\n  .append(\"text\")\n  .attr(\"class\", \"label\")\n  .attr(\"y\", 25)\n  .attr(\"x\", -35)\n  .attr(\"dy\", \".71em\")\n  // .attr(\"dx\", \".71em\")\n  .style(\"text-anchor\", \"beginning\")\n  .text(\"Y\");\n\n// console.log(data);\nvar lines = svg\n  .selectAll(\".trend_g\")\n  .data(data)\n  .enter()\n  .append(\"g\")\n  .attr(\"class\", \"trend_g\");\n\nlines\n  .append(\"path\")\n  .attr(\"class\", \"line\")\n  .attr(\"d\", function(d) {\n    // console.log(d);\n    return line(d);\n  })\n  .style(\"stroke\", function(d, i) {\n    return color(i);\n    // return \"black\";\n  });\n\n// console.log(JSON.stringify(d3.values(concentrations), null, 2)) // to view the structure\n// console.log(d3.values(concentrations)); // to view the structure\n// console.log(concentrations);\n// console.log(concentrations.map(function()))\n\n// });\n\n// Define responsive behavior\nfunction resize() {\n  var width =\n      parseInt(d3.select(\"svg\").style(\"width\")) - margin.left - margin.right,\n    height =\n      parseInt(d3.select(\"svg\").style(\"height\")) - margin.top - margin.bottom;\n\n  // Update the range of the scale with new width/height\n  xScale.range([0, width]);\n  yScale.range([height, 0]);\n\n  // Update the axis and text with the new scale\n  svg\n    .select(\".x.axis\")\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\n    .call(xAxis);\n\n  svg.select(\".y.axis\").call(yAxis);\n\n  // Force D3 to recalculate and update the line\n\n  svg.selectAll(\".line\").attr(\"d\", function(d) {\n    return line(d);\n  });\n  // and do our animation\n\n  if (ANIMATE_LINES) {\n    animate();\n  }\n\n  // .on(\"start\", repeat);\n\n  // Update the tick marks\n  xAxis.ticks(Math.max(width / 75, 2));\n  yAxis.ticks(Math.max(height / 50, 2));\n}\n\n// hacky flag\nlet has_run = false;\nlet is_showing_mean = false;\n\nfunction animate_to_mean() {\n  // console.log(\"animate_to_mean\");\n  let data_to_use = !is_showing_mean ? all_means : data;\n  is_showing_mean = !is_showing_mean;\n\n  let lines = svg\n    .selectAll(\".trend_g\")\n    .data(data_to_use)\n    .transition()\n    .duration(2000)\n    // .ease(d3.easeExp);\n    // .ease(d3.easeElastic);\n    .ease(is_showing_mean ? d3.easeExp : d3.easeBounce);\n\n  // .enter()\n  // .append(\"g\")\n  // .attr(\"class\", \"trend_g\");\n\n  lines\n    // .append(\"path\")\n    .select(\"path\")\n    .attr(\"d\", function(d) {\n      // console.log(d);\n      return line(d);\n    });\n  // .transition();\n}\nfunction animate() {\n  if (has_run) {\n    return;\n  }\n  console.log(\"animating!\");\n  has_run = true;\n  svg\n    .selectAll(\".line\")\n    .attr(\"stroke-dasharray\", \"0 100000\")\n    .transition()\n    .delay((d, i) => i * 1000)\n    .duration(20000)\n    .on(\"start\", function repeat() {\n      d3.active(this)\n        .styleTween(\"stroke-dasharray\", tweenDash)\n        .ease(d3.easeLinear)\n        .transition();\n    });\n}\n\nclass Debouncer {\n  constructor() {\n    this.lookup = {};\n  }\n  cancel(identifier) {\n    let timer_id = this.lookup[identifier];\n    if (timer_id) {\n      clearTimeout(timer_id);\n      delete this.lookup[timer_id];\n    }\n  }\n  set(identifier, ms, cb) {\n    this.cancel(identifier);\n    let new_timer_id = setTimeout(cb, ms);\n    this.lookup[identifier] = new_timer_id;\n  }\n}\n\nlet debounce = new Debouncer();\n\n// Call the resize function whenever a resize event occurs\nd3.select(window).on(\"resize\", () => debounce.set(\"resized\", 450, resize));\n// need debounce!  XXX\n\n// Call the resize function\nresize();\n\nfunction tweenDash() {\n  var l = this.getTotalLength(),\n    i = d3.interpolateString(\"0,\" + l, l + \",\" + l);\n  return function(t) {\n    return i(t);\n  };\n}\n\nfunction tweenBack() {\n  var l = this.getTotalLength(),\n    i = d3.interpolateString(l + \",0\", \"0,\" + l);\n  return function(t) {\n    return i(t);\n  };\n}\n"]}